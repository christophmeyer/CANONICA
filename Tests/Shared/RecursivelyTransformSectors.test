(* :Title: RecursivelyTransformSectors.test									*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 2017-2020 Christoph Meyer
	Copyright (C) 2019-2020 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for
											RecursivelyTransformSectors		*)

(* ------------------------------------------------------------------------ *)

Tests`Shared`RecursivelyTransformSectors =
{
{"RecursivelyTransformSectors-ID1",
"RecursivelyTransformSectors[{{{(-2*eps)/x,0,0,0,0,0,0,0},{0,0,0,0,\
0,0,0,0},{0,0,(1-2*eps)/x,0,0,0,0,0},{0,0,0,(-2*eps)/x,0,0,0,0},{0,(2-\
9*eps+9*eps^2)/(eps*x+eps*x^2),0,-((1-3*eps)/(x+x^2)),-((1+eps+x)/(x+\
x^2)),0,0,0},{0,(-2+13*eps-27*eps^2+18*eps^3)/(eps^2*x*(1+x)),(2-13*\
eps+27*eps^2-18*eps^3)/(eps^2*x^2*(1+x)),0,0,-((2*eps+x)/(x+x^2)),0,0}\
,{((1-2*eps)^2*(2+x))/(eps*x^3*(1+x)),(9*(-2+13*eps-27*eps^2+18*eps^3)\
)/(eps^2*x^2*(1+x)),(6*(-2+13*eps-27*eps^2+18*eps^3))/(eps^2*x^3*(1+x)\
),(15*(1-5*eps+6*eps^2))/(2*eps*x^2*(1+x)),-((12-24*eps)/(x+x^2)),(-\
18*eps)/x^2,-((2+2*eps+2*x+3*eps*x)/(x+x^2)),eps/(1+x)},{(2*(1-2*eps)^\
2)/(eps*x^3*(1+x)),(6*(-2+13*eps-27*eps^2+18*eps^3))/(eps^2*x^2*(1+x))\
,(6*(-2+13*eps-27*eps^2+18*eps^3)*(-1+x))/(eps^2*x^4*(1+x)),(3*(1-5*\
eps+6*eps^2)*(1+2*x))/(eps*x^3*(1+x)),-((12-24*eps)/(x+x^2)),(-12*eps)\
/x^2,(2*eps)/(x+x^2),(-2*(1+eps+x))/(x*(1+x))}}},{x},{{1,1},{2,2},{3,\
3},{4,4},{5,5},{6,6},{7,8}},{1,6},VerbosityLevel\[Rule]0]",
"{{{1, 0, 0, 0, 0, 0}, {0, (2*eps^3)/((-1 + 2*eps)*(2 - 9*eps + 9*eps^2)), 0, 0, 0, 0},
{(2*eps^3*x)/(-2 + 13*eps - 27*eps^2 + 18*eps^3), 0, (2*eps^3*x)/(-2 + 13*eps - 27*eps^2 + 18*eps^3),
0, 0, 0}, {0, 0, 0, (2*eps^2)/(1 - 5*eps + 6*eps^2), 0, 0}, {0, 0, 0, 0, -(eps/(x - 2*eps*x)), 0},
{0, 0, 0, 0, 0, (1 + x)^(-1)}}, {{{(-2*eps)/x, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, (-2*eps)/x, 0, 0,
0}, {0, 0, 0, (-2*eps)/x, 0, 0}, {0, (2*eps)/(1 + x), 0, (2*eps)/(1 + x), -(eps/(x + x^2)), 0},
{(-2*eps)/x, (2*eps)/x, (-2*eps)/x, 0, 0, (-2*eps)/(x + x^2)}}}}"},
{"RecursivelyTransformSectors-ID2",
"RecursivelyTransformSectors[{{{(2*(2 - 2*eps))/x, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0}, {-1/2*(2 - 2*eps)^2/
	x^3, -(((-8 + 3*(4 - 2*eps))*(1 - 2*eps))/x), (-2*eps)/x, 0, 0,
	0, 0, 0, 0, 0, 0}, {0, 0, 0, (2 - 2*eps)/x, 0, 0, 0, 0, 0, 0,
	0}, {(-3*(2 - 2*eps)^2)/(8*(1 - 2*eps)*x^3), 0, 0,
	0, (3*(-8 + 3*(4 - 2*eps)))/(4*x), 0, 0, 0, 0, 0,
	0}, {(2 - 2*eps)^2/(4*(1 - 2*eps)*
		x^3) - ((-7 + 2*(4 - 2*eps))*(2 - 2*eps)^2)/(2*(1 - 2*eps)*
		eps*x), -1/
	4*((10 - 3*(4 - 2*eps))*(-8 + 3*(4 - 2*eps)))/(eps*x), 0, 0,
	0, (-10 + 3*(4 - 2*eps))/(2*x), 0, 0, 0, 0,
	0}, {(-3*(-34 + 9*(4 - 2*eps))*(2 - 2*eps)^2)/(128*eps*
		x^5) - (2 - 2*eps)^2/(4*
		x^3) - ((-7 + 2*(4 - 2*eps))*(2 - 2*eps)^2)/(2*eps*x), -1/
	4*((18 - 5*(4 - 2*eps))*(-8 + 3*(4 - 2*eps))*(1 - 2*eps))/(eps*
		x), (-2*(1 - 2*eps))/x,
	0, ((-10 + 3*(4 - 2*eps))*(-8 + 3*(4 - 2*eps))*(1 - 2*eps))/(64*
	eps*x^3), -1/2*((-10 + 3*(4 - 2*eps))*(1 - 2*eps))/
	x, (-8 + 2*(4 - 2*eps))/x, 0, 0, 0, 0}, {0, 0,
	0, (-2*(1 - 2*eps))/x, 0, 0, 0, (2*(1 - 2*eps))/x, 0, 0,
	0}, {(-2*(2 - 2*eps))/x, 0, 0, 0, 0, 0, 0, 0, (2 - 2*eps)/x, 0,
	0}, {0, 0, 0, (-2*(2 - 2*eps))/x, 0, 0, 0, 0, 0, 0,
	0}, {(5*(2 - 2*eps)^2)/(4*(1 - 2*eps)*
		x^3) + (17*(2 - 2*eps)^2)/(4*(1 - 2*eps)*x), (8 -
		3*(4 - 2*eps))/(4*x^3) - (7*(-8 + 3*(4 - 2*eps)))/(4*x), -2/
	x, (2 - 2*eps)/x^3, 0, 0, 0,
	0, (2 - 2*eps)/x^3, (-2*(1 - 2*eps))/x, (-2*eps)/x}}}, {x}, {{1,
1}, {2, 2}, {3, 3}, {4, 4}, {5, 5}, {6, 6}, {7, 7}, {8, 8}, {9,
9}, {10, 10}, {11, 11}}, {1, 11}, VerbosityLevel -> -10,
DDeltaNumeratorDegree -> 2, TDeltaDenominatorDegree -> 2,
TDeltaNumeratorDegree -> 2]",
"{{{(12*(-2 + eps)*eps*x^4)/(-1 + eps)^2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
{(12*(-2 + eps)*eps*x^2)/(-1 + eps), 15 - 2/eps - 6*eps, 8, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 7*x^2, 7*x^2, x^2, 0, 0, 0, 0, 0, 0, 0},
{(36*eps*x^2)/(-1 + 2*eps), 0, 0, 0, x^3, 0, 0, 0, 0, 0, 0},
{(12*(-2 + eps)*x^2*(2*x^2 + eps^2*(1 + 8*x^2) - eps*(3 + 10*x^2)))/((-3 + eps)*(-1 + eps)*(-1 + 2*eps)), 3 - 2/eps, 0, 0, 0, x, 0, 0, 0, 0, 0},
{3*(5 - (4*(-2 + eps)*(1 + eps)*(-1 + 4*eps)*x^4)/(-3 + eps)), 308 + 2/eps^2 - 21/eps - 18*eps, (-8 + eps)/eps,
0, ((-1 + 2*eps)*(-2 + 3*eps)*(-1 + 3*eps)*x)/(8*(-2 + eps)*eps), ((-1 + 5*eps - 6*eps^2)*x)/(1 + eps), 9, 0, 0, 0, 0},
{4*x^2, ((-7 + 10*eps)*x^2)/eps, ((-7 + 10*eps)*x^2)/eps, -(((1 + 2*eps)*x^2)/eps), 0, 0, 0, 4*x^2, 0, 0, 0},
{(-24*(-2 + eps)*eps*x^4)/(-1 + eps)^2, x^2/(1 - eps), x^2/(1 - eps), x^2/(-1 + eps), 0, 0, 0, 0, (eps*x^2)/(-1 + eps), 0, 0},
{0, 1 - 14*x^2, -14*x^2, -2*x^2, 0, 0, 0, 0, 0, 1, 0},
{(6*eps*x^2*(6 + 17*x^2 + eps^2*(1 + 17*x^2) - eps*(5 + 34*x^2)))/((-1 + eps)^2*(-1 + 2*eps)), (-8*x^2 + 54*eps*x^2 - 112*eps^4*x^4 -
eps^2*(2 + 83*x^2 + 56*x^4) + eps^3*(3 + 37*x^2 + 168*x^4))/(4*(-1 + eps)*eps^2*x^2), 3 + (14 - 28*eps)*x^2, 1 + (2 - 4*eps)*x^2,
0, 0, 0, 0, 1, -((1 + eps)/eps), 2}},
{{{(-4*eps)/x, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, (-2*eps)/x, (-2*eps)/x, 0, 0, 0, 0, 0, 0, 0, 0},
{0, 0, 0, (-2*eps)/x, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, (-9*eps)/(2*x), 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, (-3*eps)/x, 0, 0, 0, 0, 0},
{(-5*eps)/(2*x), (-1090*eps)/(9*x), (10*eps)/(3*x), 0, 0, 0, (-4*eps)/x, 0, 0, 0, 0}, {0, (2*eps)/x, (2*eps)/x, (2*eps)/x, 0, 0, 0,
(-4*eps)/x, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, (-2*eps)/x, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, (-7*eps)/x, -(eps/x),
0, 0, 0, 0, -(eps/x), (3*eps)/x, (-2*eps)/x}}}}"}
};
